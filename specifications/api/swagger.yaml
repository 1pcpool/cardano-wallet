swagger: '2.0'
schemes: ["https"]
host: localhost
basePath: /v2
info:
  title: Cardano Wallet Backend API
  version: 2.0.0
  license:
    name: MIT
    url: https://raw.githubusercontent.com/input-output-hk/cardano-wallet/master/LICENSE
  description: |
    <p align="right"><img style="position: relative; top: -10em; margin-bottom: -12em;" width="20%" src="https://cardanodocs.com/img/cardano.png"></img></p>
externalDocs:
  description: Need more? Click here to access our API guide and walkthrough.
  url: 'TODO'
consumes: ["application/json"]
produces: ["application/json"]

#############################################################################
#                                                                           #
#                                 FIELDS                                    #
#                                                                           #
#############################################################################

numberOfSlots: &numberOfSlots
  type: object
  required:
    - quantity
    - unit
  properties:
    quantity:
      type: integer
      minimum: 0
    unit:
      type: string
      enum:
        - slot
      example: 1337

percentage: &percentage
  type: object
  required:
    - quantity
    - unit
  properties:
    quantity:
      type: number
      minimum: 0
      maximum: 100
      example: 42
    unit:
      type: string
      enum:
        - percentage

amount: &amount
  description: Coins, in Lovelace
  type: object
  required:
    - quantity
    - unit
  properties:
    quantity:
      type: integer
      minimum: 0
      example: 42000000
    unit:
      type: string
      enum:
        - lovelace

addressId: &addressId
  type: string
  format: base58
  example: 2cWKMJemoBam7gg1y5K2aFDhAm5L8fVc96NfxgcGhdLMFTsToNAU9t5HVdBBQKy4iDswL

addressState: &addressState
  type: string
  enum:
    - used
    - unused

walletId: &walletId
  description: A unique identifier for the wallet
  type: string
  format: uuid
  example: a312e413-e8c8-4bda-9f5b-9b7f518174d8

walletName: &walletName
  type: string
  maxLength: 255
  minLength: 1
  example: Alan's Wallet

walletMnemonicSentence: &walletMnemonicSentence
  description: A list of mnemonic words
  type: array
  minItems: 15
  maxItems: 30
  items:
    type: string
    format: bip-0039-mnemonic-word{english}
  example: ["squirrel", "material", "silly", "twice", "direct", "slush", "pistol", "razor", "become", "junk", "kingdom", "flee"]

walletMnemonicPassphrase: &walletMnemonicPassphrase
  description: An optional passphrase used to generate the mnemonic sentence.
  type: string
  maxLength: 255
  example: Secure Passphrase

walletPassphrase: &walletPassphrase
  description: An optional master passphrase to lock and protect the wallet for sensitive operation (e.g. sending funds)
  type: string
  maxLength: 255
  example: Secure Passphrase

walletAddressPoolGap: &walletAddressPoolGap
  description: Number of consecutive unused addresses allowed
  type: integer
  minimum: 10
  maximum: 100
  example: 20
  default: 20

walletState: &walletState
  description: Whether a wallet is ready to use or still syncing
  type: string
  enum:
    - ready
    - syncing

walletBalance: &walletBalance
  description: Wallet current balance(s)
  type: object
  required:
    - available
  properties:
    available:
      <<: *amount
      description: Available balance (funds that can be spent)

transactionId: &transactionId
  description: A unique identifier for this transaction
  type: string
  format: hex
  maxLength: 64
  minLength: 64
  example: 1423856bc91c49e928f6f30f4e8d665d53eb4ab6028bd0ac971809d514c92db1

transactionAmount: &transactionAmount
  <<: *amount

transactionInsertedAt: &transactionInsertedAt
  description: Absolute time the transaction was inserted in a block
  type: object
  required:
    - block
    - time
  properties:
    time:
      type: string
      format: iso-8601-date-and-time
      example: 2019-02-27T14:46:45Z
    block:
      type: object
      required:
        - slot_number
        - epoch_number
      properties:
        slot_number:
          type: integer
          minimum: 0
          example: 1337
        epoch_number:
          type: integer
          minimum: 0
          example: 14

transactionDepth: &transactionDepth
  description: Current depth of the transaction in the local chain
  <<: *numberOfSlots

transactionDirection: &transactionDirection
  type: string
  enum:
    - outgoing
    - incoming

transactionInputs: &transactionInputs
  description: A list of resolved inputs
  type: array
  minItems: 1
  items:
    type: object
    required:
      - address
      - amount
    properties:
      address: *addressId
      amount: *transactionAmount

transactionOutputs: &transactionOutputs
  description: A list of target outputs
  <<: *transactionInputs

transactionStatus: &transactionStatus
  description: |
    Current transaction status.

      ```
                                  *-----------*
                                  |           |
                  *---------------> DISCARDED |
                  |               |           |
              (timeout)           *-----------*
                  |
             *---------*
             |         |
      -------> PENDING <----------------*
             |         |                |
             *---------*            (rollback)
                  |                     |
             (in ledger)          *----------*
                  |               |          |
                  *---------------> INSERTED |
                                  |          |
                                  *----------*
      ```
  type: string
  enum:
    - pending
    - inserted
    - discarded

stakePoolId: &stakePoolId
  <<: *addressId
  description: A unique identifier (i.e. its public key)

stakePoolNgram: &stakePoolNgram
  type: string
  minLength: 3
  maxLength: 4
  description: A short human-readable identifier
  example: IOHK

stakePoolMetrics: &stakePoolMetrics
  type: object
  required:
    - controlled_stake
    - accuracy
    - last_blocks
  properties:
    controlled_stake: *transactionAmount
    accuracy:
      description: Estimated accuracy computed over the last epoch
      <<: *percentage

    last_blocks:
      <<: *numberOfSlots
      description: Number of blocks correctly processed during the last epoch

networkInformationSyncProgress: &networkInformationSyncProgress
  <<: *percentage

networkInformationBlockchainHeight: &networkInformationBlockchainHeight
  <<: *numberOfSlots

networkInformationLocalHeight: &networkInformationLocalHeight
  <<: *numberOfSlots

networkInformationNtpStatus: &networkInformationNtpStatus
  type: object
  required:
    - status
  properties:
    status:
      type: string
      enum:
        - available
        - pending
        - unavailable
    drift:
      type: object
      required:
        - quantity
        - unit
      properties:
        quantity:
          type: integer
          minimum: 0
          example: 14
        unit:
          type: string
          enum:
            - microseconds

#############################################################################
#                                                                           #
#                               PARAMETERS                                  #
#                                                                           #
#############################################################################

parametersBody: &parametersBody
  in: body
  name: body
  required: true

parametersWalletId: &parametersWalletId
  in: path
  name: walletId
  required: true
  type: string
  format: uuid

parametersStakePoolId: &parametersStakePoolId
  in: path
  name: stakePoolId
  required: true
  type: string
  format: base58

parametersPostWallet: &parametersPostWallet
  type: object
  required:
    - name
    - mnemonic_sentence
  properties:
    name: *walletName
    mnemonic_sentence: *walletMnemonicSentence
    mnemonic_passphrase: *walletMnemonicPassphrase
    passphrase: *walletPassphrase
    address_pool_gap: *walletAddressPoolGap

parametersPutWallet: &parametersPutWallet
  type: object
  properties:
    name: *walletName

parametersPutWalletPassphrase: &parametersPutWalletPassphrase
  type: object
  required:
    - new_passphrase
  properties:
    old_passphrase:
      <<: *walletPassphrase
      description: The old passphrase, if any. Do not sent if there's no passphrase.
      minLength: 1
    new_passphrase:
      <<: *walletPassphrase
      description: A master passphrase to lock and protect the wallet for sensitive operation (e.g. sending funds)

parametersPostTransaction: &parametersPostTransaction
  type: object
  required:
    - targets
  properties:
    targets: *transactionOutputs
    passphrase:
      <<: *walletPassphrase
      description: The wallet's master passphrase, if any.

parametersPostTransactionFee: &parametersPostTransactionFee
  type: object
  required:
    - targets
  properties:
    targets: *transactionOutputs

parametersJoinStakePool: &parametersJoinStakePool
  type: object
  properties:
    passphrase:
      <<: *walletPassphrase
      description: The wallet's master passphrase, if any.

parametersQuitStakePool: &parametersQuitStakePool
  <<: *parametersJoinStakePool


#############################################################################
#                                                                           #
#                                RESPONSES                                  #
#                                                                           #
#############################################################################

responsesErr: &responsesErr
  type: object
  required: message
  properties:
    message:
      type: string

responsesErr400: &responsesErr400
  400:
    description: Bad Request
    schema: *responsesErr

responsesErr403: &responsesErr403
  403:
    description: Forbidden
    schema: *responsesErr

responsesErr404: &responsesErr404
  404:
    description: Not Found
    schema: *responsesErr

responsesErr409: &responsesErr409
  409:
    description: Conflict
    schema: *responsesErr

responsesErr410: &responsesErr410
  406:
    description: Gone
    schema: *responsesErr

responsesErr415: &responsesErr415
  415:
    description: Unsupported Media Type
    schema: *responsesErr

responseErr422: &responsesErr422
  422:
    description: Unprocessable Entity
    schema: *responsesErr

responsesListWallets: &responsesListWallets
  200:
    description: Ok
    schema:
      type: array
      items: &wallet
        type: object
        required:
          - id
          - address_pool_gap
          - balance
          - name
          - state
        properties:
          id: *walletId
          address_pool_gap: *walletAddressPoolGap
          balance: *walletBalance
          name: *walletName
          state: *walletState

responsesPostWallet: &responsesPostWallet
  <<: *responsesErr400
  <<: *responsesErr409
  <<: *responsesErr415
  202:
    description: Accepted
    schema: *wallet

responsesDeleteWallet: &responsesDeleteWallet
  <<: *responsesErr404
  <<: *responsesErr422
  204:
    description: No Content

responsesPutWallet: &responsesPutWallet
  <<: *responsesErr400
  <<: *responsesErr404
  <<: *responsesErr410
  <<: *responsesErr415
  200:
    description: Ok
    schema: *wallet

responsesPutWalletPassphrase: &responsesPutWalletPassphrase
  <<: *responsesErr400
  <<: *responsesErr403
  <<: *responsesErr404
  <<: *responsesErr410
  <<: *responsesErr415
  <<: *responsesErr422
  204:
    description: No Content

responsesListTransactions: &responsesListTransactions
  <<: *responsesErr404
  200:
    description: Ok
    headers:
      Content-Range:
        type: string
        format: inserted-at {range-start}-{range-end}/{total}
        example: inserted-at 20190227T160329Z-20190101T042557Z/42
    schema:
      type: array
      items: &transaction
        type: object
        required:
          - id
          - amount
          - depth
          - direction
          - inputs
          - outputs
          - status
        properties:
          id: *transactionId
          amount: *transactionAmount
          inserted_at: *transactionInsertedAt
          depth: *transactionDepth
          direction: *transactionDirection
          inputs: *transactionInputs
          outputs: *transactionOutputs
          status: *transactionStatus

responsesPostTransaction: &responsesPostTransaction
  <<: *responsesErr400
  <<: *responsesErr403
  <<: *responsesErr404
  <<: *responsesErr415
  202:
    description: Accepted
    schema: *transaction

responsesPostTransactionFee: &responsesPostTransactionFee
  <<: *responsesErr400
  <<: *responsesErr404
  <<: *responsesErr415
  200:
    description: Ok
    schema:
      type: object
      required:
        - amount
      properties:
        amount: *transactionAmount

responsesListAddresses: &responsesListAddresses
  <<: *responsesErr400
  <<: *responsesErr404
  200:
    description: Ok
    schema:
      type: array
      items:
        type: object
        required:
          - id
          - state
        properties:
          id: *addressId
          state: *addressState

responsesListStakePools: &responsesListStakePools
  200:
    description: Ok
    schema:
        type: array
        items:
          type: object
          required:
            - id
            - ngram
            - metrics
          properties:
            id: *stakePoolId
            ngram: *stakePoolNgram
            metrics: *stakePoolMetrics

responsesJoinStakePool: &responsesJoinStakePool
  <<: *responsesErr400
  <<: *responsesErr403
  <<: *responsesErr404
  <<: *responsesErr415
  202:
    description: Accepted
    schema: *transaction

responsesQuitStakePool: &responsesQuitStakePool
  <<: *responsesJoinStakePool

responsesGetNetworkInformation: &responsesGetNetworkInformation
  200:
    description: Ok
    schema: &networkInformation
      type: object
      required:
        - syncProgress
        - blockchainHeight
        - localHeight
        - ntpStatus
      properties:
        syncProgress: *networkInformationSyncProgress
        blockchainHeight: *networkInformationBlockchainHeight
        localHeight: *networkInformationLocalHeight
        ntpStatus: *networkInformationNtpStatus


#############################################################################
#                                                                           #
#                                  PATHS                                    #
#                                                                           #
#############################################################################

paths:
  /wallets:
    get:
      operationId: listWallets
      tags: ["Wallets"]
      summary: List
      description: Priority [Very High]
      responses: *responsesListWallets

    post:
      operationId: postWallet
      tags: ["Wallets"]
      summary: Create / Restore
      description: Priority [Very High]
      parameters:
        - <<: *parametersBody
          schema: *parametersPostWallet
      responses: *responsesPostWallet

  /wallets/{walletId}:
    delete:
      operationId: deleteWallet
      tags: ["Wallets"]
      summary: Delete
      description: Priority [Low]
      parameters:
        - *parametersWalletId
      responses: *responsesDeleteWallet

    put:
      operationId: putWallet
      tags: ["Wallets"]
      summary: Update Metadata
      description: Priority [Low]
      parameters:
        - *parametersWalletId
        - <<: *parametersBody
          schema: *parametersPutWallet
      responses: *responsesPutWallet

  /wallets/{walletId}/passphrase:
    put:
      operationId: putWalletPassphrase
      tags: ["Wallets"]
      summary: Update Passphrase
      parameters:
        - *parametersWalletId
        - <<: *parametersBody
          schema: *parametersPutWalletPassphrase
      responses: *responsesPutWalletPassphrase

  /wallets/{walletId}/transactions:
    get:
      operationId: listTransactions
      tags: ["Transactions"]
      summary: List
      description: Priority [High]
      parameters:
        - in: header
          name: Range
          type: string
          format: inserted_at={range-start}-{range-end}
          example: inserted-at 20190227T160329Z-*
          description: |
            A range of date in ISO-8601 UTC format without symbols to retrieve. Note that
            the start joker symbol `*` can be used instead of a date to refer to a lower
            or upper boundary.
      responses: *responsesListTransactions

    post:
      operationId: postTransaction
      tags: ["Transactions"]
      summary: Create
      description: Priority [High]
      parameters:
        - *parametersWalletId
        - <<: *parametersBody
          schema: *parametersPostTransaction
      responses: *responsesPostTransaction

  /wallets/{walletId}/transactions/fees:
    post:
      operationId: postTransactionFee
      tags: ["Transactions"]
      summary: Estimate
      description: Priority [Medium]
      parameters:
        - *parametersWalletId
        - <<: *parametersBody
          schema: *parametersPostTransactionFee
      responses: *responsesPostTransactionFee

  /wallets/{walletId}/addresses:
    get:
      operationId: listAddresses
      tags: ["Addresses"]
      summary: List
      description: Priority [High]
      parameters:
        - *parametersWalletId
        - in: query
          name: state
          type: string
          enum:
            - used
            - unused
          description: An optional filter on the address state.
      responses: *responsesListAddresses

  /stake-pools:
    get:
      operationId: listStakePools
      tags: ["Stake Pools"]
      summary: List
      description: Priority [High]
      responses: *responsesListStakePools

  /stake-pools/{stakePoolId}/wallets/{walletId}:
    put:
      operationId: joinStakePool
      tags: ["Stake Pools"]
      summary: Join
      description: Priority [High]
      parameters:
        - *parametersStakePoolId
        - *parametersWalletId
        - <<: *parametersBody
          schema: *parametersJoinStakePool
      responses: *responsesJoinStakePool

    delete:
      operationId: quitStakePool
      tags: ["Stake Pools"]
      summary: Quit
      description: Priority [High]
      parameters:
        - *parametersStakePoolId
        - *parametersWalletId
        - <<: *parametersBody
          schema: *parametersQuitStakePool
      responses: *responsesQuitStakePool

  /network/information:
    get:
        operationId: getNetworkInformation
        tags: ["Network"]
        summary: Information
        description: Priority [Low]
        responses: *responsesGetNetworkInformation
