#!/usr/bin/env bash

# Constructs a CHANGELOG using every PR merged since a given date. It groups PRs by milestones.
#
# /!\ depends on 'jq' and 'curl' /!\
#
# Usage:
#     make_changelog YYYY-MM-DD
#
# Example:
#     make_changelog 2019-08-15

# NOTE:
# You need to set $GITHUB_API_TOKEN before running this script

REPO="input-output-hk/cardano-wallet"

: ${GITHUB_API_TOKEN?"Please provide a Github Api Token for fetching pull requests"}

PULL_REQUESTS=$(curl -X GET \
  -H "Authorization: token $API_TOKEN" \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/search/issues?per_page=500\&q=repo:$REPO+is:pr+is:merged+merged:%3E$1)

PULL_REQUESTS=$(echo $PULL_REQUESTS | jq '.items | map({number:.number,title:.title,label:.labels[0].name}) | group_by(.label)')
ITEMS=$(echo $PULL_REQUESTS | jq 'map(map("#\(.number) | \(.title)"))')
LABELS=$(echo $PULL_REQUESTS | jq 'map(map("\(.label)") | unique) | flatten')
I=($(echo $LABELS | jq 'length - 1'))

for i in $(seq 0 $I); do
  LABEL=$(echo $LABELS | jq -r ".[$i]")
  case $LABEL in
  "null")
      echo "## Unclassified"
      ;;
  "ADDING FEATURE")
      echo "## New Features"
      ;;
  "IMPROVING CODE")
      echo "## Improvements"
      ;;
  "RESOLVING ISSUE")
      echo "## Resolved Issues"
      ;;
  esac
  echo ""
  J=($(echo $ITEMS | jq ".[$i] | length - 1"))
  for j in $(seq 0 $J); do
    LINE=$(echo $ITEMS | jq -r ".[$i] | .[$j]")
    echo "- $LINE"
  done
  echo ""
done
