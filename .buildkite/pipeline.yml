env:
  LC_ALL: "en_US.UTF-8"
  NIX_PATH: "channel:nixos-21.05"

  # Per-container variables
  SCRATCH_DIR: "/scratch/cardano-wallet"
  BUILD_DIR: "/build/cardano-wallet"
  STACK_ROOT: "/build/cardano-wallet.stack"
  CABAL_DIR: "/build/cardano-wallet.cabal"
  XDG_STATE_HOME: "/build/cardano-wallet/.state"
  XDG_CACHE_HOME: "/build/cardano-wallet/.cache"
  TESTS_LOGDIR: "/build/cardano-wallet/integration-test-logs"

  # Per-host variables - shared across containers on host
  CACHE_DIR: "/cache/cardano-wallet"

steps:
  - label: 'Prevent merging to wrong branch'
    if: 'build.branch == "bors/staging"'
    command: './.buildkite/check-bors.sh'
    agents:
      system: x86_64-linux
  - wait: ~
    if: 'build.branch == "bors/staging"'

  - label: 'Stack Rebuild'
    commands:
      - "export PATH=$(nix-build ./nix/default.nix -A pkgs.bash -o result-bash)/bin:$PATH"
      - "which bash"
      - "rm -rf $TESTS_LOGDIR && mkdir -p $TESTS_LOGDIR"
      - "nix-build .buildkite/default.nix -o sr"
      - "./sr/bin/rebuild --build-dir=$BUILD_DIR --cache-dir=$CACHE_DIR"
    timeout_in_minutes: 120
    artifact_paths:
      - "/build/cardano-wallet/.stack-work/logs/cardano-wallet*.log"
      - "/tmp/wallet-integration-logs/*/*.log"
    agents:
      system: x86_64-linux

  - label: 'Check Cabal Configure'
    commands: |
      export PATH=$(nix-build ./nix/default.nix -A pkgs.bash -o result-bash)/bin:$PATH
      which bash
      ldd `which bash`
      bash --version
      echo "+++ test 1"
      nix-shell --pure nix/cabal-shell.nix --run "echo test1" || true
      echo "+++ test 2"
      nix-shell --pure nix/cabal-shell.nix --run "$(pwd)/result-bash/bin/bash scripts/buildkite/cabal-ci.sh configure" || true
      echo "+++ test 3"
      nix-shell --pure nix/cabal-shell.nix --run "scripts/buildkite/cabal-ci.sh configure"
    agents:
      system: x86_64-linux

  - label: 'Check Cabal Configure (Haskell.nix shellFor)'
    command:
      - 'nix-shell --run "echo --- Cabal update ; cabal update"'
      - 'nix-shell --run "echo +++ Cabal configure ; cabal configure --enable-tests --enable-benchmarks"'
      - 'nix-shell --run "echo +++ Cabal configure -frelease ; cabal configure -frelease --enable-tests --enable-benchmarks"'
    agents:
      system: x86_64-linux
