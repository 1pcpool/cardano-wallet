name:                cardano-wallet
version:             2.0.0
synopsis:            The Wallet Backend for a Cardano node.
description:         Please see README.md
homepage:            https://github.com/input-output-hk/cardano-wallet
author:              IOHK Engineering Team
maintainer:          operations@iohk.io
copyright:           2019 IOHK
license:             MIT
license-file:        LICENSE
category:            Web
build-type:          Simple
extra-source-files:  README.md
cabal-version:       >=1.10

flag development
    description: Disable `-Werror`
    default: False
    manual: True

library
  default-language:
      Haskell2010
  default-extensions:
      NoImplicitPrelude
      OverloadedStrings
  ghc-options:
      -Wall
      -Wcompat
      -fwarn-redundant-constraints
  if (!flag(development))
    ghc-options:
      -Werror
  build-depends:
      aeson
    , base
    , base58-bytestring
    , basement
    , binary
    , bytestring
    , cardano-crypto
    , cborg
    , containers
    , cryptonite
    , deepseq
    , digest
    , exceptions
    , fmt
    , http-api-data
    , http-client
    , http-media
    , lens
    , memory
    , say
    , servant
    , servant-client
    , servant-client-core
    , text
    , time
    , time-units
    , transformers
    , uuid-types
  hs-source-dirs:
      src
  exposed-modules:
      Cardano.DBLayer
      Cardano.DBLayer.MVar
      Cardano.NetworkLayer
      Cardano.NetworkLayer.HttpBridge
      Cardano.NetworkLayer.HttpBridge.Api
      Cardano.Wallet
      Cardano.Wallet.AddressDerivation
      Cardano.Wallet.AddressDiscovery
      Cardano.Wallet.Api.V2
      Cardano.Wallet.Api.V2.JSON
      Cardano.Wallet.Api.V2.Lenses
      Cardano.Wallet.Api.V2.Types.Amount
      Cardano.Wallet.Api.V2.Types.CurrencyUnit
      Cardano.Wallet.Api.V2.Types.Percentage
      Cardano.Wallet.Api.V2.Types.Wallet
      Cardano.Wallet.Api.V2.Types.WalletAddressPoolGap
      Cardano.Wallet.Api.V2.Types.WalletBalance
      Cardano.Wallet.Api.V2.Types.WalletDelegation
      Cardano.Wallet.Api.V2.Types.WalletDelegationStatus
      Cardano.Wallet.Api.V2.Types.WalletId
      Cardano.Wallet.Api.V2.Types.WalletName
      Cardano.Wallet.Api.V2.Types.WalletPassphraseInfo
      Cardano.Wallet.Api.V2.Types.WalletState
      Cardano.Wallet.Api.V2.Types.WalletStateStatus
      Cardano.Wallet.Binary
      Cardano.Wallet.Binary.Packfile
      Cardano.WalletLayer
      Cardano.Wallet.Mnemonic
      Cardano.Wallet.Primitive
      Servant.Extra.ContentTypes
  other-modules:
      Paths_cardano_wallet

test-suite unit
  default-language:
      Haskell2010
  default-extensions:
      NoImplicitPrelude
      OverloadedStrings
  ghc-options:
      -threaded -rtsopts
      -Wall
      -O2
  if (!flag(development))
    ghc-options:
      -Werror
  build-depends:
      aeson
    , base
    , async
    , base58-bytestring
    , bytestring
    , cardano-crypto
    , cardano-wallet
    , cborg
    , containers
    , deepseq
    , exceptions
    , fmt
    , generic-arbitrary
    , hspec
    , memory
    , process
    , QuickCheck
    , quickcheck-instances
    , text
    , time-units
    , transformers
    , uuid-types
  type:
     exitcode-stdio-1.0
  hs-source-dirs:
      test/unit
      app
  main-is:
      Main.hs
  other-modules:
      Cardano.DBLayer.MVarSpec
      Cardano.DBLayerSpec
      Cardano.Launcher
      Cardano.LauncherSpec
      Cardano.NetworkLayer.HttpBridge.ApiSpec
      Cardano.NetworkLayer.HttpBridgeSpec
      Cardano.NetworkLayerSpec
      Cardano.Wallet.AddressDerivationSpec
      Cardano.Wallet.AddressDiscoverySpec
      Cardano.Wallet.Api.V2.Arbitraries
      Cardano.Wallet.Api.V2.JsonSpec
      Cardano.Wallet.Binary.PackfileSpec
      Cardano.Wallet.BinarySpec
      Cardano.Wallet.MnemonicSpec
      Cardano.Wallet.PrimitiveSpec
      Cardano.WalletLayerSpec
      Cardano.WalletSpec
      Servant.Extra.ContentTypesSpec
  if os(windows)
    build-depends: Win32
    other-modules: Cardano.Launcher.Windows
  else
    build-depends: unix, say
    other-modules: Cardano.Launcher.POSIX

test-suite integration
  default-language:
      Haskell2010
  default-extensions:
      NoImplicitPrelude
      OverloadedStrings
  ghc-options:
      -threaded -rtsopts
      -Wall
      -O2
  if (!flag(development))
    ghc-options:
      -Werror
  build-depends:
      base
    , aeson
    , async
    , bytestring
    , cardano-wallet
    , exceptions
    , fmt
    , generic-lens
    , hspec
    , hspec-core
    , http-client
    , http-api-data
    , http-types
    , aeson-qq
    , lens
    , mtl
    , process
    , say
    , template-haskell
    , text
    , transformers

  type:
     exitcode-stdio-1.0
  hs-source-dirs:
      test/integration
      app
  main-is:
      Main.hs
  other-modules:
      Cardano.NetworkLayer.HttpBridgeSpec
      Cardano.Launcher
      Test.Integration.Framework.DSL
      Test.Integration.Framework.Request
      Test.Integration.Framework.Scenario
  if os(windows)
    build-depends: Win32
    other-modules: Cardano.Launcher.Windows
  else
    build-depends: unix
    other-modules: Cardano.Launcher.POSIX

executable cardano-wallet-server
  default-language:
      Haskell2010
  default-extensions:
      NoImplicitPrelude
      OverloadedStrings
  ghc-options:
      -threaded -rtsopts
      -Wall
      -Werror
      -O2
  build-depends:
      base
    , cardano-wallet
    , docopt
    , say
    , text
  hs-source-dirs:
      app
      app/server
  other-modules:
      Cardano.CLI
  main-is:
      Main.hs

executable cardano-wallet-launcher
  default-language:
      Haskell2010
  default-extensions:
      NoImplicitPrelude
      OverloadedStrings
  ghc-options:
      -threaded -rtsopts
      -Wall
      -Werror
      -O2
  build-depends:
      async
    , cardano-wallet
    , base
    , docopt
    , fmt
    , process
    , say
    , text
  hs-source-dirs:
      app
      app/launcher
  other-modules:
      Cardano.CLI
      Cardano.Launcher
  if os(windows)
    build-depends: Win32
    other-modules: Cardano.Launcher.Windows
  else
    build-depends: unix
    other-modules: Cardano.Launcher.POSIX

  main-is:
     Main.hs

executable cardano-generate-mnemonic
  default-language:
      Haskell2010
  default-extensions:
      NoImplicitPrelude
      OverloadedStrings
  ghc-options:
      -Wall
      -Werror
      -O2
  build-depends:
      base
    , cardano-wallet
    , text
  hs-source-dirs:
      app/mnemonic
  main-is:
      GenerateMnemonic.hs
